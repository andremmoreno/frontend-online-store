{"ast":null,"code":"var _jsxFileName = \"/home/andre/projetos/sd-12-project-frontend-online-store/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport CategoryList from './CategoryList';\nimport ProductCard from './ProductCard';\nimport ButtonToCart from './ButtonToCart';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: 'none',\n      queryText: '',\n      productList: [],\n      categoryText: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderList = this.renderList.bind(this);\n    this.handleCategoryText = this.handleCategoryText.bind(this);\n  }\n\n  async handleSubmit() {\n    const {\n      queryText,\n      categoryText\n    } = this.state;\n    const {\n      getProductsFromCategoryAndQuery\n    } = api;\n    const results = await getProductsFromCategoryAndQuery(categoryText, queryText);\n    this.setState({\n      loading: 'done',\n      productList: results\n    });\n  }\n\n  handleCategoryText(event) {\n    const {\n      id\n    } = event.target;\n    this.setState({\n      categoryText: id,\n      queryText: ''\n    }, () => this.handleSubmit());\n  }\n\n  renderForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"query-input\",\n      placeholder: \"O que tu queres procurar?\",\n      id: \"query\",\n      type: \"text\",\n      onChange: event => this.setState({\n        queryText: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"query-button\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Procurar\"));\n  }\n\n  renderList() {\n    const {\n      addItemToCart\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    if (loading === 'loading') return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }\n    }, \"Loading...\");\n    if (loading === 'none') return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }\n    });\n    const {\n      productList: {\n        results\n      }\n    } = this.state;\n    if (results.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }\n    }, \"Nenhum produto foi encontrado\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, results.map(prod => /*#__PURE__*/React.createElement(ProductCard, {\n      key: prod.id,\n      product: prod,\n      addItemToCart: addItemToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }\n    }))));\n  }\n\n  render() {\n    const {\n      cartList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(ButtonToCart, {\n      cartList: cartList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CategoryList, {\n      handleCategoryText: this.handleCategoryText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), this.renderForm(), this.renderList());\n  }\n\n}\n\nSearch.propTypes = {\n  addItemToCart: PropTypes.func.isRequired,\n  cartList: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/home/andre/projetos/sd-12-project-frontend-online-store/src/components/Search.js"],"names":["React","Component","PropTypes","api","CategoryList","ProductCard","ButtonToCart","Search","constructor","props","state","loading","queryText","productList","categoryText","handleSubmit","bind","renderForm","renderList","handleCategoryText","getProductsFromCategoryAndQuery","results","setState","event","id","target","value","addItemToCart","length","map","prod","render","cartList","propTypes","func","isRequired","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport CategoryList from './CategoryList';\nimport ProductCard from './ProductCard';\nimport ButtonToCart from './ButtonToCart';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: 'none',\n      queryText: '',\n      productList: [],\n      categoryText: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderList = this.renderList.bind(this);\n    this.handleCategoryText = this.handleCategoryText.bind(this);\n  }\n\n  async handleSubmit() {\n    const { queryText, categoryText } = this.state;\n    const { getProductsFromCategoryAndQuery } = api;\n    const results = await getProductsFromCategoryAndQuery(categoryText, queryText);\n    this.setState({\n      loading: 'done',\n      productList: results,\n    });\n  }\n\n  handleCategoryText(event) {\n    const { id } = event.target;\n    this.setState({\n      categoryText: id,\n      queryText: '',\n    }, () => this.handleSubmit());\n  }\n\n  renderForm() {\n    return (\n      <form>\n        <label htmlFor=\"query\">\n          <input\n            data-testid=\"query-input\"\n            placeholder=\"O que tu queres procurar?\"\n            id=\"query\"\n            type=\"text\"\n            onChange={ (event) => this.setState({ queryText: event.target.value }) }\n          />\n        </label>\n        <button\n          data-testid=\"query-button\"\n          type=\"button\"\n          onClick={ this.handleSubmit }\n        >\n          Procurar\n        </button>\n      </form>\n    );\n  }\n\n  renderList() {\n    const { addItemToCart } = this.props;\n    const { loading } = this.state;\n    if (loading === 'loading') return <p>Loading...</p>;\n    if (loading === 'none') return <div />;\n    const { productList: { results } } = this.state;\n    if (results.length === 0) return <p>Nenhum produto foi encontrado</p>;\n    return (\n      <div>\n        <ul>\n          { results.map(\n            (prod) => (<ProductCard\n              key={ prod.id }\n              product={ prod }\n              addItemToCart={ addItemToCart }\n            />),\n          )}\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    const { cartList } = this.props;\n    return (\n      <div>\n        <div data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </div>\n        <ButtonToCart cartList={ cartList } />\n        <CategoryList handleCategoryText={ this.handleCategoryText } />\n        {this.renderForm()}\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  addItemToCart: PropTypes.func.isRequired,\n  cartList: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}