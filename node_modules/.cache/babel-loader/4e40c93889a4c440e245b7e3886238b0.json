{"ast":null,"code":"var _jsxFileName = \"/home/andre/projetos/sd-12-project-frontend-online-store/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport * as api from '../services/api';\nimport CategoryList from './CategoryList';\nimport ProductCard from './ProductCard';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: 'none',\n      queryText: '',\n      productList: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderList = this.renderList.bind(this);\n  }\n\n  async handleSubmit() {\n    const {\n      queryText\n    } = this.state;\n    const {\n      getProductsFromCategoryAndQuery\n    } = api;\n    const results = await getProductsFromCategoryAndQuery('', queryText);\n    this.setState({\n      loading: 'done',\n      productList: results\n    });\n  }\n\n  renderForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"query-input\",\n      placeholder: \"O que tu queres procurar?\",\n      id: \"query\",\n      type: \"text\",\n      onChange: event => this.setState({\n        queryText: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"query-button\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Procurar\"));\n  }\n\n  renderList() {\n    const {\n      loading\n    } = this.state;\n    if (loading === 'loading') return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 39\n      }\n    }, \"Loading...\");\n    if (loading === 'none') return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }\n    });\n    const {\n      productList: {\n        results\n      }\n    } = this.state;\n    if (results.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }\n    }, \"Nenhum produto foi encontrado\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, results.map(prod => /*#__PURE__*/React.createElement(ProductCard, {\n      key: prod.id,\n      product: prod,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CategoryList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), this.renderForm(), this.renderList());\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/andre/projetos/sd-12-project-frontend-online-store/src/components/Search.js"],"names":["React","Component","api","CategoryList","ProductCard","Search","constructor","props","state","loading","queryText","productList","handleSubmit","bind","renderForm","renderList","getProductsFromCategoryAndQuery","results","setState","event","target","value","length","map","prod","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,MADE;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAED,QAAMD,YAAN,GAAqB;AACnB,UAAM;AAAEF,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAsCd,GAA5C;AACA,UAAMe,OAAO,GAAG,MAAMD,+BAA+B,CAAC,EAAD,EAAKN,SAAL,CAArD;AACA,SAAKQ,QAAL,CAAc;AACZT,MAAAA,OAAO,EAAE,MADG;AAEZE,MAAAA,WAAW,EAAEM;AAFD,KAAd;AAID;;AAEDH,EAAAA,UAAU,GAAG;AACX,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,qBAAY,aADd;AAEE,MAAA,WAAW,EAAC,2BAFd;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAIK,KAAD,IAAW,KAAKD,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAES,KAAK,CAACC,MAAN,CAAaC;AAA1B,OAAd,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE;AACE,qBAAY,cADd;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAG,KAAKT,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADF;AAoBD;;AAEDG,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEN,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,QAAIC,OAAO,KAAK,SAAhB,EAA2B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAC3B,QAAIA,OAAO,KAAK,MAAhB,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACxB,UAAM;AAAEE,MAAAA,WAAW,EAAE;AAAEM,QAAAA;AAAF;AAAf,QAA+B,KAAKT,KAA1C;AACA,QAAIS,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AAC1B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIL,OAAO,CAACM,GAAR,CACCC,IAAD,iBAAW,oBAAC,WAAD;AACT,MAAA,GAAG,EAAGA,IAAI,CAACC,EADF;AAET,MAAA,OAAO,EAAGD,IAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX,CADJ,CADF,CADF;AAYD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKZ,UAAL,EAFH,EAGG,KAAKC,UAAL,EAHH,CADF;AAOD;;AA1E4B;;AA6E/B,eAAeV,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as api from '../services/api';\nimport CategoryList from './CategoryList';\nimport ProductCard from './ProductCard';\n\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: 'none',\n      queryText: '',\n      productList: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderList = this.renderList.bind(this);\n  }\n\n  async handleSubmit() {\n    const { queryText } = this.state;\n    const { getProductsFromCategoryAndQuery } = api;\n    const results = await getProductsFromCategoryAndQuery('', queryText);\n    this.setState({\n      loading: 'done',\n      productList: results,\n    });\n  }\n\n  renderForm() {\n    return (\n      <form>\n        <label htmlFor=\"query\">\n          <input\n            data-testid=\"query-input\"\n            placeholder=\"O que tu queres procurar?\"\n            id=\"query\"\n            type=\"text\"\n            onChange={ (event) => this.setState({ queryText: event.target.value }) }\n          />\n        </label>\n        <button\n          data-testid=\"query-button\"\n          type=\"button\"\n          onClick={ this.handleSubmit }\n        >\n          Procurar\n        </button>\n      </form>\n    );\n  }\n\n  renderList() {\n    const { loading } = this.state;\n    if (loading === 'loading') return <p>Loading...</p>;\n    if (loading === 'none') return <div />;\n    const { productList: { results } } = this.state;\n    if (results.length === 0) return <p>Nenhum produto foi encontrado</p>;\n    return (\n      <div>\n        <ul>\n          { results.map(\n            (prod) => (<ProductCard\n              key={ prod.id }\n              product={ prod }\n            />),\n          )}\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <CategoryList />\n        {this.renderForm()}\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}